package com.so.dal.floorball.model.game;
// Generated 27.2.2017 18:41:18 by Hibernate Tools 4.3.1


import com.so.dal.core.model.game.Game;
import com.so.dal.core.model.season.SeasonTournamentPeriod;
import com.so.dal.core.model.game.CompetitorTeam;
import com.so.dal.core.model.game.GamePlayer;
import com.so.dal.core.model.season.SeasonTournamentPenaltySettings;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SportFlorbalGameActivity generated by hbm2java
 */
@Entity
@Table(name="sportFlorbalGameActivity"
    ,catalog="sport_app_dev"
)
public class SportFlorbalGameActivity  implements java.io.Serializable {


     private Integer id;
     private CompetitorTeam competitorTeam;
     private GamePlayer gamePlayerByIdAssistPlayer;
     private GamePlayer gamePlayerByIdGoalPlayer;
     private GamePlayer gamePlayerByIdAssist2player;
     private GamePlayer gamePlayerByIdPenaltyPlayer;
     private SeasonTournamentPenaltySettings seasonTournamentPenaltySettings;
     private SeasonTournamentPeriod seasonTournamentPeriod;
     private Game game;
     private SportFlorbalGameActivityType sportFlorbalGameActivityType;
     private SportFlorbalGoalType sportFlorbalGoalType;
     private Date gameTime;
     private Date realTime;
     private Integer newScoreHome;
     private Integer newScoreAway;
     private Date penaltySeconds;

    public SportFlorbalGameActivity() {
    }

	
    public SportFlorbalGameActivity(CompetitorTeam competitorTeam, SeasonTournamentPeriod seasonTournamentPeriod, Game game, Date gameTime, Date realTime, Date penaltySeconds) {
        this.competitorTeam = competitorTeam;
        this.seasonTournamentPeriod = seasonTournamentPeriod;
        this.game = game;
        this.gameTime = gameTime;
        this.realTime = realTime;
        this.penaltySeconds = penaltySeconds;
    }
    public SportFlorbalGameActivity(CompetitorTeam competitorTeam, GamePlayer gamePlayerByIdAssistPlayer, GamePlayer gamePlayerByIdGoalPlayer, GamePlayer gamePlayerByIdAssist2player, GamePlayer gamePlayerByIdPenaltyPlayer, SeasonTournamentPenaltySettings seasonTournamentPenaltySettings, SeasonTournamentPeriod seasonTournamentPeriod, Game game, SportFlorbalGameActivityType sportFlorbalGameActivityType, SportFlorbalGoalType sportFlorbalGoalType, Date gameTime, Date realTime, Integer newScoreHome, Integer newScoreAway, Date penaltySeconds) {
       this.competitorTeam = competitorTeam;
       this.gamePlayerByIdAssistPlayer = gamePlayerByIdAssistPlayer;
       this.gamePlayerByIdGoalPlayer = gamePlayerByIdGoalPlayer;
       this.gamePlayerByIdAssist2player = gamePlayerByIdAssist2player;
       this.gamePlayerByIdPenaltyPlayer = gamePlayerByIdPenaltyPlayer;
       this.seasonTournamentPenaltySettings = seasonTournamentPenaltySettings;
       this.seasonTournamentPeriod = seasonTournamentPeriod;
       this.game = game;
       this.sportFlorbalGameActivityType = sportFlorbalGameActivityType;
       this.sportFlorbalGoalType = sportFlorbalGoalType;
       this.gameTime = gameTime;
       this.realTime = realTime;
       this.newScoreHome = newScoreHome;
       this.newScoreAway = newScoreAway;
       this.penaltySeconds = penaltySeconds;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idTeam", nullable=false)
    public CompetitorTeam getCompetitorTeam() {
        return this.competitorTeam;
    }
    
    public void setCompetitorTeam(CompetitorTeam competitorTeam) {
        this.competitorTeam = competitorTeam;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idAssistPlayer")
    public GamePlayer getGamePlayerByIdAssistPlayer() {
        return this.gamePlayerByIdAssistPlayer;
    }
    
    public void setGamePlayerByIdAssistPlayer(GamePlayer gamePlayerByIdAssistPlayer) {
        this.gamePlayerByIdAssistPlayer = gamePlayerByIdAssistPlayer;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idGoalPlayer")
    public GamePlayer getGamePlayerByIdGoalPlayer() {
        return this.gamePlayerByIdGoalPlayer;
    }
    
    public void setGamePlayerByIdGoalPlayer(GamePlayer gamePlayerByIdGoalPlayer) {
        this.gamePlayerByIdGoalPlayer = gamePlayerByIdGoalPlayer;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idAssist2Player")
    public GamePlayer getGamePlayerByIdAssist2player() {
        return this.gamePlayerByIdAssist2player;
    }
    
    public void setGamePlayerByIdAssist2player(GamePlayer gamePlayerByIdAssist2player) {
        this.gamePlayerByIdAssist2player = gamePlayerByIdAssist2player;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idPenaltyPlayer")
    public GamePlayer getGamePlayerByIdPenaltyPlayer() {
        return this.gamePlayerByIdPenaltyPlayer;
    }
    
    public void setGamePlayerByIdPenaltyPlayer(GamePlayer gamePlayerByIdPenaltyPlayer) {
        this.gamePlayerByIdPenaltyPlayer = gamePlayerByIdPenaltyPlayer;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idPenaltyType")
    public SeasonTournamentPenaltySettings getSeasonTournamentPenaltySettings() {
        return this.seasonTournamentPenaltySettings;
    }
    
    public void setSeasonTournamentPenaltySettings(SeasonTournamentPenaltySettings seasonTournamentPenaltySettings) {
        this.seasonTournamentPenaltySettings = seasonTournamentPenaltySettings;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idGamePeriod", nullable=false)
    public SeasonTournamentPeriod getSeasonTournamentPeriod() {
        return this.seasonTournamentPeriod;
    }
    
    public void setSeasonTournamentPeriod(SeasonTournamentPeriod seasonTournamentPeriod) {
        this.seasonTournamentPeriod = seasonTournamentPeriod;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idGame", nullable=false)
    public Game getGame() {
        return this.game;
    }
    
    public void setGame(Game game) {
        this.game = game;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idType")
    public SportFlorbalGameActivityType getSportFlorbalGameActivityType() {
        return this.sportFlorbalGameActivityType;
    }
    
    public void setSportFlorbalGameActivityType(SportFlorbalGameActivityType sportFlorbalGameActivityType) {
        this.sportFlorbalGameActivityType = sportFlorbalGameActivityType;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idGoalType")
    public SportFlorbalGoalType getSportFlorbalGoalType() {
        return this.sportFlorbalGoalType;
    }
    
    public void setSportFlorbalGoalType(SportFlorbalGoalType sportFlorbalGoalType) {
        this.sportFlorbalGoalType = sportFlorbalGoalType;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="gameTime", nullable=false, length=19)
    public Date getGameTime() {
        return this.gameTime;
    }
    
    public void setGameTime(Date gameTime) {
        this.gameTime = gameTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="realTime", nullable=false, length=19)
    public Date getRealTime() {
        return this.realTime;
    }
    
    public void setRealTime(Date realTime) {
        this.realTime = realTime;
    }

    
    @Column(name="newScoreHome")
    public Integer getNewScoreHome() {
        return this.newScoreHome;
    }
    
    public void setNewScoreHome(Integer newScoreHome) {
        this.newScoreHome = newScoreHome;
    }

    
    @Column(name="newScoreAway")
    public Integer getNewScoreAway() {
        return this.newScoreAway;
    }
    
    public void setNewScoreAway(Integer newScoreAway) {
        this.newScoreAway = newScoreAway;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="penaltySeconds", nullable=false, length=19)
    public Date getPenaltySeconds() {
        return this.penaltySeconds;
    }
    
    public void setPenaltySeconds(Date penaltySeconds) {
        this.penaltySeconds = penaltySeconds;
    }




}


