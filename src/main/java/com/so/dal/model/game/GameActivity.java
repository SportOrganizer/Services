package com.so.dal.model.game;
// Generated 3.1.2017 21:20:18 by Hibernate Tools 4.3.1


import com.so.dal.model.season.SeasonTournamentPenalty;
import com.so.dal.model.season.SeasonTournamentPeriod;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * GameActivity generated by hbm2java
 */
@Entity
@Table(name="gameActivity"
    ,catalog="sport_app_dev"
)
public class GameActivity  implements java.io.Serializable {


     private Integer id;
     private CompetitorTeam competitorTeam;
     private Game game;
     private GamePlayer gamePlayerByIdPenaltyPlayer;
     private GamePlayer gamePlayerByIdAssist2player;
     private GamePlayer gamePlayerByIdGoalPlayer;
     private GamePlayer gamePlayerByIdAssistPlayer;
     private GameType gameType;
     private GoalType goalType;
     private SeasonTournamentPenalty seasonTournamentPenalty;
     private SeasonTournamentPeriod seasonTournamentPeriod;
     private Date gameTime;
     private Date realTime;
     private Integer newScoreHome;
     private Integer newScoreAway;
     private Date penaltySeconds;

    public GameActivity() {
    }

	
    public GameActivity(CompetitorTeam competitorTeam, Game game, SeasonTournamentPeriod seasonTournamentPeriod, Date gameTime, Date realTime, Date penaltySeconds) {
        this.competitorTeam = competitorTeam;
        this.game = game;
        this.seasonTournamentPeriod = seasonTournamentPeriod;
        this.gameTime = gameTime;
        this.realTime = realTime;
        this.penaltySeconds = penaltySeconds;
    }
    public GameActivity(CompetitorTeam competitorTeam, Game game, GamePlayer gamePlayerByIdPenaltyPlayer, GamePlayer gamePlayerByIdAssist2player, GamePlayer gamePlayerByIdGoalPlayer, GamePlayer gamePlayerByIdAssistPlayer, GameType gameType, GoalType goalType, SeasonTournamentPenalty seasonTournamentPenalty, SeasonTournamentPeriod seasonTournamentPeriod, Date gameTime, Date realTime, Integer newScoreHome, Integer newScoreAway, Date penaltySeconds) {
       this.competitorTeam = competitorTeam;
       this.game = game;
       this.gamePlayerByIdPenaltyPlayer = gamePlayerByIdPenaltyPlayer;
       this.gamePlayerByIdAssist2player = gamePlayerByIdAssist2player;
       this.gamePlayerByIdGoalPlayer = gamePlayerByIdGoalPlayer;
       this.gamePlayerByIdAssistPlayer = gamePlayerByIdAssistPlayer;
       this.gameType = gameType;
       this.goalType = goalType;
       this.seasonTournamentPenalty = seasonTournamentPenalty;
       this.seasonTournamentPeriod = seasonTournamentPeriod;
       this.gameTime = gameTime;
       this.realTime = realTime;
       this.newScoreHome = newScoreHome;
       this.newScoreAway = newScoreAway;
       this.penaltySeconds = penaltySeconds;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idTeam", nullable=false)
    public CompetitorTeam getCompetitorTeam() {
        return this.competitorTeam;
    }
    
    public void setCompetitorTeam(CompetitorTeam competitorTeam) {
        this.competitorTeam = competitorTeam;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idGame", nullable=false)
    public Game getGame() {
        return this.game;
    }
    
    public void setGame(Game game) {
        this.game = game;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idPenaltyPlayer")
    public GamePlayer getGamePlayerByIdPenaltyPlayer() {
        return this.gamePlayerByIdPenaltyPlayer;
    }
    
    public void setGamePlayerByIdPenaltyPlayer(GamePlayer gamePlayerByIdPenaltyPlayer) {
        this.gamePlayerByIdPenaltyPlayer = gamePlayerByIdPenaltyPlayer;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idAssist2Player")
    public GamePlayer getGamePlayerByIdAssist2player() {
        return this.gamePlayerByIdAssist2player;
    }
    
    public void setGamePlayerByIdAssist2player(GamePlayer gamePlayerByIdAssist2player) {
        this.gamePlayerByIdAssist2player = gamePlayerByIdAssist2player;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idGoalPlayer")
    public GamePlayer getGamePlayerByIdGoalPlayer() {
        return this.gamePlayerByIdGoalPlayer;
    }
    
    public void setGamePlayerByIdGoalPlayer(GamePlayer gamePlayerByIdGoalPlayer) {
        this.gamePlayerByIdGoalPlayer = gamePlayerByIdGoalPlayer;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idAssistPlayer")
    public GamePlayer getGamePlayerByIdAssistPlayer() {
        return this.gamePlayerByIdAssistPlayer;
    }
    
    public void setGamePlayerByIdAssistPlayer(GamePlayer gamePlayerByIdAssistPlayer) {
        this.gamePlayerByIdAssistPlayer = gamePlayerByIdAssistPlayer;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idType")
    public GameType getGameType() {
        return this.gameType;
    }
    
    public void setGameType(GameType gameType) {
        this.gameType = gameType;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idGoalType")
    public GoalType getGoalType() {
        return this.goalType;
    }
    
    public void setGoalType(GoalType goalType) {
        this.goalType = goalType;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idPenaltyType")
    public SeasonTournamentPenalty getSeasonTournamentPenalty() {
        return this.seasonTournamentPenalty;
    }
    
    public void setSeasonTournamentPenalty(SeasonTournamentPenalty seasonTournamentPenalty) {
        this.seasonTournamentPenalty = seasonTournamentPenalty;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idGamePeriod", nullable=false)
    public SeasonTournamentPeriod getSeasonTournamentPeriod() {
        return this.seasonTournamentPeriod;
    }
    
    public void setSeasonTournamentPeriod(SeasonTournamentPeriod seasonTournamentPeriod) {
        this.seasonTournamentPeriod = seasonTournamentPeriod;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="gameTime", nullable=false, length=19)
    public Date getGameTime() {
        return this.gameTime;
    }
    
    public void setGameTime(Date gameTime) {
        this.gameTime = gameTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="realTime", nullable=false, length=19)
    public Date getRealTime() {
        return this.realTime;
    }
    
    public void setRealTime(Date realTime) {
        this.realTime = realTime;
    }

    
    @Column(name="newScoreHome")
    public Integer getNewScoreHome() {
        return this.newScoreHome;
    }
    
    public void setNewScoreHome(Integer newScoreHome) {
        this.newScoreHome = newScoreHome;
    }

    
    @Column(name="newScoreAway")
    public Integer getNewScoreAway() {
        return this.newScoreAway;
    }
    
    public void setNewScoreAway(Integer newScoreAway) {
        this.newScoreAway = newScoreAway;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="penaltySeconds", nullable=false, length=19)
    public Date getPenaltySeconds() {
        return this.penaltySeconds;
    }
    
    public void setPenaltySeconds(Date penaltySeconds) {
        this.penaltySeconds = penaltySeconds;
    }




}


